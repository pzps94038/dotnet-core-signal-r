kind: pipeline
name: default

workspace:
  base: /src
  path: chat_api

steps:
  - name: install-package
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - dotnet restore "dotnet-core-signal-r.csproj"
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - mkdir dist
      - dotnet build "dotnet-core-signal-r.csproj" -c Release -o dist
  - name: artifact
    image: appleboy/drone-scp
    commands:
      - apt install zip
      - zip -r chat_api.zip dist
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      overwrite: true
      target: /file-server/${DRONE_REPO_NAME}
      source: chat_api.zip
  - name: docker build && push
    image: plugins/docker
    settings:
      repo: pzps94038/chat-api
      username: pzps94038
      password:
        from_secret: DOCKER_PWD
      no_cache: true
      tags:
        - latest
        - main
    when:
      branch:
        - main
      event:
        - push
  - name: deploy
    image: appleboy/drone-ssh
    environment:
      ORIGINS:
        from_secret: ORIGINS
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      command_timeout: 2m
      envs:
        - ORIGINS
      script:
        - docker stop chat-api || true &&
          docker rm chat-api || true &&
          docker pull pzps94038/chat-api:latest &&
          docker run -d -p 8086:80 --name chat-api --restart=always
          -e ORIGINS="$ORIGINS"
          -e PORT=80
          pzps94038/chat-api:latest
    when:
      branch:
        - main
      event:
        - push

trigger:
  branch:
    - main
    - develop
  event:
    - push
    - pull_request
    - tag
