kind: pipeline
name: default

workspace:
  base: /src
  path: chat_api

steps:
  - name: install-package
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - dotnet restore "dotnet-core-signal-r.csproj"
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - mkdir chat_api
      - dotnet build "dotnet-core-signal-r.csproj" -c Release -o chat_api
  - name: zip
    image: lunagod/drone-zip
    settings:
      input:
        - chat_api
      output: chat_api.zip
    when:
      branch:
        - main
      event:
        - push
  - name: artifact
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      overwrite: true
      rm: true
      target: /file-server/chat_api
      source: chat_api.zip
    when:
      branch:
        - main
      event:
        - push
  - name: artifact Upload Finish
    image: node:16
    commands:
      - echo -e "\n
        ====================================================================\n
        ✅ fileUpload artifact in https://file-server.ronwebs.com/chat_api\n
        ===================================================================="
    when:
      branch:
        - main
      event:
        - push
  - name: docker build && push
    image: plugins/docker
    settings:
      repo: pzps94038/chat-api
      username: pzps94038
      password:
        from_secret: DOCKER_PWD
      no_cache: true
      tags:
        - latest
        - main
    when:
      branch:
        - main
      event:
        - push
  - name: deploy
    image: appleboy/drone-ssh
    environment:
      ORIGINS:
        from_secret: ORIGINS
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      command_timeout: 2m
      envs:
        - ORIGINS
      script:
        - echo ======開始部署=======
        - docker stop chat-api || true &&
          docker rm chat-api || true &&
          docker pull pzps94038/chat-api:latest &&
          docker run -d -p 8086:80 --name chat-api --restart=always
          -e ORIGINS="$ORIGINS"
          -e PORT=80
          pzps94038/chat-api:latest
        - echo ======部署完成=======
    when:
      branch:
        - main
      event:
        - push
  - name: notify
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      username:
        from_secret: GMAIL_SENDER_EMAIL
      password:
        from_secret: GMAIL_PWD
      from:
        from_secret: GMAIL_SENDER_EMAIL
      recipients_only: true
      recipients:
        - pzps94038@yahoo.com.tw
    when:
      branch:
        - main
      event:
        - push
      status:
        - success
        - failure

trigger:
  branch:
    - main
    - develop
  event:
    - push
    - pull_request
    - tag
